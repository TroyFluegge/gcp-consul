---

- name: Upgrade All Packages
  yum:
    name: '*'
    state: latest
    update_cache: yes

- name: Install Dependancies
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - unzip
    - nc
    - tcpdump
    - docker
    - docker-python
    - bind-utils

- name: Install Consul
  unarchive:
    src: https://releases.hashicorp.com/consul/1.7.3+ent/consul_1.7.3+ent_linux_amd64.zip
    dest: /usr/local/bin
    remote_src: yes

- name: Consul Permissions
  file:
    path: /usr/local/bin/consul
    owner: root
    group: root

- name: Consul User
  user:
    name: consul
    comment: Consul Service Account
    shell: /bin/false
    home: /etc/consul.d
    system: yes

- name: Create /opt/consul Directory
  file:
    path: /opt/consul
    recurse: yes
    owner: consul
    group: consul
    state: directory

- name: Copy Systemd Unit File
  copy:
    src: ./files/consul.service
    dest: /etc/systemd/system/consul.service

- name: Create /etc/consul.d Directory
  file:
    path: /etc/consul.d
    recurse: yes
    owner: consul
    group: consul
    state: directory

- name: Get Network Segment Name From Metadata
  uri: 
    url: http://metadata.google.internal/computeMetadata/v1/instance/attributes/subnet-name
    return_content: yes
    headers:
      Metadata-Flavor: Google
  register: subnet_name

# This errors on the servers since segment ports are not added to the metadata.  
# I could put a task tag on this for clients but I got lazy
- name: Get Network Segment Port Number From Metadata
  uri: 
    url: http://metadata.google.internal/computeMetadata/v1/instance/attributes/consul-segment-port
    return_content: yes
    headers:
      Metadata-Flavor: Google
  register: subnet_port
  ignore_errors: yes

- name: Template Consul Configuration File
  template:
    src: ./template/consul.hcl.j2
    dest: /etc/consul.d/consul.hcl
    owner: consul
    group: consul
    mode: '0640'
  notify:
    - restart consul

- name: Template Server Configuration File
  template:
    src: ./template/server.hcl.j2
    dest: /etc/consul.d/server.hcl
    owner: consul
    group: consul
    mode: '0640'
  notify:
    - restart consul

- name: Template Network Segments Configuration File
  template:
    src: ./template/segments.hcl.j2
    dest: /etc/consul.d/segments.hcl
    owner: consul
    group: consul
    mode: '0640'
  notify:
    - restart consul

- name: Enable and Start Consul Service
  systemd:
    name: consul
    state: started
    enabled: yes

- name: Apply Consul License Blob
  command: /usr/local/bin/consul license put "{{ consul_license_blob }}"
  tags:
    - apply_consul_license

- name: Create /etc/prometheus Directory
  file:
    path: /etc/prometheus
    recurse: yes
    state: directory
  tags:
    - single_node_cmds

- name: Template prometheus Configuration File
  template:
    src: ./template/prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
  tags:
    - single_node_cmds

- name: Enable and Start Docker Service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Start a grafana container
  docker_container:
    name: grafana
    image: grafana/grafana
    state: started
    ports:
      - "3000:3000"
  tags:
    - single_node_cmds

- name: Start a prometheus container
  docker_container:
    name: prometheus
    image: prom/prometheus
    state: started
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  tags:
    - single_node_cmds